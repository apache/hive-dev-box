#!/bin/bash -e

if [ "$EUID" != 0 ] ;then
	sudo $0 "$@"
	exit 0
fi

D=/conf

function gen_content() {
	cat >&3 << EOF
<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!-- GENERATED by `$0` at `date` -->
<!-- BEWARE: your edits might get overwritten... -->
<configuration>
EOF

	cd $D
	for f in `find $1 -type f`;do
		k="`basename "$f"`"
		echo "<property>"		>&3
		echo " <name>$k</name>"		>&3
		echo " <value>`cat $f`</value>"	>&3
		echo "</property>"		>&3
	done
echo '</configuration>' >&3

}

function deploy() {
	OUT=/etc/${1}.xml
	rm -f $OUT
	gen_content $1 3> $OUT
}

case "$1" in
	init)
		git init $D
	;;
	set)
		[ "$#" -ne 4 ] && echo "incorrect args" && exit 1
		cd $D
		mkdir -p "$2"
		echo "$4" > "$2/$3"
		git add .
		git commit -m "$2/$3 => $4" || echo no-op
		deploy $2
	;;
	del)
		[ "$#" -ne 3 ] && echo "incorrect args" && exit 1
		cd $D
		rm -f "$2/$3"
		git add .
		git commit -m "del $2/$3" || echo no-op
		deploy $2
	;;
	show)
		cd $D
		find *  -type f -printf "%p " -exec cat "{}" \;
	;;
	*)
		cat << EOF
usage:
	$0 show 								# lists props
	$0 set <path> <key> <value>				#
	$0 del <path> <key>
example:
	$0 set hive/hive-site hive.in.test true
	$0 del hive/hive-site hive.in.test
EOF
		exit 1
	;;
esac

